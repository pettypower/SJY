<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
        
    <!-- 启动注解驱动的spring MVC功能,注册请求url和注解POJO类方法的映射-->
	<mvc:annotation-driven />
       
	<!-- 告诉spring要扫描的包,会扫描到文件中带有@Service,@Component,@Repository,@Controller等这些注解的类，
	 	  并把这些类注册为bean
      	 @Service告诉spring容器，这是一个Service类，标识持久层Bean组件，默认情况会自动加载它到spring容器中。 
		 @Componet：基本注解，标识一个受Spring管理的Bean组件 
		 @Repository注解指定此类是一个容器类，是DA层类的实现。标识持久层Bean组件
		 @Controller:标识表现层Bean组件 
		 @Autowried注解告诉spring，这个字段需要自动注入  
		 use-default-filters用来指示是否自动扫描带有@Component、@Repository、@Service和@Controller的类。默认为true，即默认扫描
　　　　　　  <context:include-filter/>子标签是用来添加扫描注解
　　　　　  　<context:exclude-filter/>子标签是用来排除扫描注解
	-->
	<context:component-scan base-package="com.test.mvcdemo.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
	</bean>
	
	<!--这里是对静态资源的映射-->
    <mvc:resources location="/static/" mapping="/static/**" />
</beans>